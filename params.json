{"name":"Kohana-form","tagline":"Advanced Form functionality for kohana","body":"kohana-form: продвинутая функциональность форм для коханы\r\n===\r\n\r\nКак пользоваться:\r\n\r\n\r\nСоздание формы\r\n\r\n\r\n\r\n```\r\n<?php\r\ndefined('SYSPATH') OR die('No direct access allowed.');\r\n\r\nclass Form_Login extends Form\r\n{\r\n    public static function meta()\r\n    {\r\n        return array(\r\n            \"fields\" => array(\r\n                \"login\" => Field::factory(\"Varchar\"),\r\n                \"password\" => Field::factory(\"Password\"),\r\n            ),\r\n\r\n            \"options\" => array( // заполняется по желанию. может быть пустым массивом.\r\n                \"valid_messages_file\" => \"login\", // файл в котором лежат сообщения валидации, должен находиться в папке messages\r\n                \"theme\" => \"base\" // тема формы. base - тема по умолчанию, из коробки есть 2 темы: base, nolabels. nolabels это таже тема base только без тегов label\r\n            ),\r\n        );\r\n    }\r\n} \r\n\r\n```\r\n\r\nИмеющиеся типы полей:\r\n\r\n<ul>\r\n\t<li> Email</li>\r\n<li> Hidden </li>\r\n<li> Image</li>\r\n<li> Int </li>\r\n<li> Password </li>\r\n<li> Text </li>\r\n<li> Timestamp</li>\r\n<li> Varchar </li>\r\n<li> Int Unsigned </li>\r\n</ul>\r\n\r\nКак показать форму:\r\n\r\nПросто показать\r\n\r\n```\r\n <form>\r\n     <?php echo $form; ?>\r\n     <input type=\"submit\" value=\"Add\"/>\r\n </form>\r\n\r\n```\r\n\r\nПоказать с стилями bootstrap:\r\n\r\n```\r\n       <form method=\"POST\" role=\"form\">\r\n            <?php foreach ($form as $field): ?>\r\n                <div class=\"form-group\">\r\n                    <?php $field->css_class(array(\"form-control\")); ?>\r\n                    <?php foreach ($field->errors() as $error): ?>\r\n                        <div class=\"alert alert-danger\">\r\n                            <?php echo $error; ?>\r\n                        </div>\r\n                    <?php endforeach; ?>\r\n                    <?php echo $field; ?>\r\n                </div>\r\n            <? endforeach; ?>\r\n            <input type=\"submit\" class=\"btn btn-primary\" value=\"Add\"/>\r\n        </form>\r\n\r\n```\r\n\r\nСоздать модельную форму:\r\n\r\n```\r\nclass Form_Article extends ModelForm\r\n{\r\n\r\n    public static function meta()\r\n    {\r\n        return array(\r\n            \"fields\" => array( //необязательно для заполнения. используется для переопределения полей, если это требуется.\r\n                \"image\" => Field::factory(\"Image\")\r\n            ),\r\n            \"options\" => array(\r\n                \"model\" => ORM::factory(\"Article\"), //собственно модель из которой будем генерить форму\r\n                \"display_fields\" => array(\"title\", \"body\", \"image\"), //отображаемые поля\r\n                \"valid_messages_file\" => \"news\", //используемый файл для сообщений валидации\r\n                \"except_fields\" => array() //какие поля скрыть и не показывать\r\n            ),\r\n        );\r\n    }\r\n}\r\n\r\n```\r\n\r\nСоздать форму для определенной сущности в базе данных\r\n\r\n\r\n```\r\nForm::factory(\"Article\", array(), $id);\r\n\r\n```\r\n\r\nСоздать форму для определенного набора данных\r\n\r\n\r\n```\r\nForm::factory(\"Article\", array(\"title\" => \"Hello!\"));\r\n\r\n```\r\n\r\nПолучить и сохранить модельную форму:\r\n\r\n```\r\npublic function action_add()\r\n    {\r\n       if ($this->request->method() == \"POST\") {\r\n\r\n            $form = Form::factory(\"Article\", $this->request->post());\r\n\r\n            $form->add_field(\r\n                Field::factory(\"Hidden\")\r\n                    ->name(\"user\")\r\n                    ->value(Auth::instance()\r\n                        ->get_user())\r\n            );\r\n            if ($form->validate())\r\n                $form->save();\r\n        }       \r\n    }\r\n\r\n```\r\n\r\nСоздать formset\r\n\r\n```\r\n<?php\r\ndefined('SYSPATH') OR die('No direct access allowed.');\r\n\r\nclass Formset_News extends Formset\r\n{\r\n\r\n    public static function meta()\r\n    {\r\n        return array(\r\n            \"base_form\" => \"News\",\r\n            \"theme\" => \"bootstrap\"\r\n        );\r\n    }\r\n} \r\n\r\n```\r\n\r\nФормсеты так же имплементируют Iterator, поэтому можно легко получить доступ к каждому элементу.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}